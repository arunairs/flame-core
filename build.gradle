import java.nio.charset.StandardCharsets

apply plugin: 'docker-compose'

buildscript {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
        maven { url 'http://repo.spring.io/plugins-release' }
    }

    ext {
        libs = [
                spring : [
                        boot: [version: '1.5.2.RELEASE']
                ],
                commons: [
                        lang : [version: '3.5'],
                        codec: [version: '1.10']
                ],
                google : [
                        guava: [version: '21.0']
                ],
                jackson: [
                        version: '2.8.7'
                ],
                lombok : [
                        version: '1.16.14'
                ],
                testng : [
                        version: '6.11'
                ]
        ]
    }

    dependencies {
        classpath(
                "org.springframework.boot:spring-boot-gradle-plugin:${libs.spring.boot.version}",
                "com.bmuschko:gradle-docker-plugin:3.0.4",
                "com.avast.gradle:docker-compose-gradle-plugin:0.3.21"
        )
    }
}

allprojects { project ->
    apply plugin: 'java'
    apply from: "${rootDir}/config/checkstyle/checkstyle.gradle"

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    project.version = archiveVersion

    project.tasks.withType(JavaCompile) {
        options.encoding = StandardCharsets.UTF_8.name()
    }

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
        jcenter()
    }

    dependencies {
        testCompile "org.testng:testng:${libs.testng.version}"
    }

    test {
        useTestNG()
        enabled = true
    }

    task s1tests(type: Test) {
        useTestNG() {
            includeGroups 's1'
        }

        //jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5007'
    }
}